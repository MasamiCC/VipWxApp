// pages/order/subOrder/subOrder.js
const app = getApp();
const wxSocket = require("../../../utils/wxSocket.js")
const network = require("../../../utils/network.js")
const WxNotificationCenter = require("../../../utils/WxNotificationCenter.js");
const contant = require("../../../utils/contant.js")
const util = require("../../../utils/util.js")
const dateTimePicker = require('../../../utils/dateTimePicker.js');
Page({

  /**
   * 页面的初始数据
   */
  data: {
    imgUrl: app.globalData.imageUrl,
    total: 0,
    shop: [],
    users: [],
    goodsCount: 0,
    userid: '',
    goodlist: [],
    foodid: '',
    shopId: '',
    orderNo: '', //订单编号
    pay: '', //订单价格
    orderMehod: contant.orderMehod, //生成订单的三种类别
    methodNum: 0, //生成订单的方式
    location: '', //堂食的地址
    mealNum: '', //用餐人数
    contactNickname: '', //联系人姓名
    contactPhone: '', //联系人手机
    remark: '', //备注
    invoiceData: '', //发票
    //时间
    dateTimeArray1: null,
    dateTime1: null,
    timeToStore: '',
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function(options) {
    var that = this;

    //通过websocket得到购入的商品信息
    that._getCartData();
    //根据商家id得到商家信息
    network.request("shop/newGetShopDetail", {
      shopid: options.shopId,
    }, res => {
      if (res.result) {
        that.setData({
          foodid: options.foodid,
          shopId: options.shopId,
          shop: res.result,
        })
      }
    })

    //判断是否存在预定
    if (contant.orderMehod.length > 1) {
      // 获取完整的年月日 时分秒，以及默认显示的数组
      //var dateTime = dateTimePicker.dateTimePicker(this.data.startYear, this.data.endYear);
      let dateTime = dateTimePicker.datePickByStartTime(new Date());

      //加载对象
      this.setData({
        dateTimeArray1: dateTime.dateTimeArray,
        dateTime1: dateTime.dateTime
      });
    }
  },

  /*页面出现 */
  onShow: function() {
    let pages = getCurrentPages();
    let currPage = pages[pages.length - 1];
    if (currPage.data.orderInvoice) {
      //加载备注和发票数据
      this.setData({
        invoiceData: currPage.data.orderInvoice,
      })
    }
  },
  _getCartData: function() {
    var that = this;
    wxSocket.sendSocketMessage({
      command: 2
    }, that.shopCartFn)
  },

  /** 
   * 用户选择不同的购买方式
   */

  radioChange: function(event) {
    //更改不同的方式
    this.setData({
      methodNum: event.detail.value
    })
  },

  /**
   *  位置输入内容
   */
  methodLocation: function(event) {
    //设置堂食位置
    this.setData({
      location: event.detail.value
    })
  },

  /*
   * 用餐人数
   */
  mealNum: function(e){
    this.setData({
      mealNum: e.detail.value //人数
    })
  },

  /*
   * 时间被选择
   */
  changeDateTime1(e) {
    var dateArr = this.data.dateTimeArray1;

    //生成时间格式
    var timeToStore = this.creatTime(dateArr,e);
    this.setData({
      dateTime1: e.detail.value, //数组的选项
      timeToStore: timeToStore, //到店时间
    });
  },

  creatTime: function(dateArr,e){
    var arry = '';
    //生成到店时间的数据
    for (var i in dateArr) {
      if (i == 0 || i==1){
        arry += parseInt(dateArr[i][e.detail.value[i]]) + '-';
      }else if(i == 2){
        arry += parseInt(dateArr[i][e.detail.value[i]]) + ' ';
      }else if(i == 3){
        arry += parseInt(dateArr[i][e.detail.value[i]]) + ':';
      }else{
        arry += parseInt(dateArr[i][e.detail.value[i]]);
      }
    }
    return arry;
  },
  //更改日期选择器里的月份
  changeDateTimeColumn1(e) {
    var arr = this.data.dateTime1,
      dateArr = this.data.dateTimeArray1;

    //如果选择的月份
    if (e.detail.column == 1) {
      //更改月份
      arr[e.detail.column] = e.detail.value;
      dateArr[2] = dateTimePicker.changeMonthDay(dateArr[0][arr[0]], dateArr[1][arr[1]], new Date(), '日');
    }

    this.setData({
      dateTimeArray1: dateArr,
      dateTime1: arr
    });
  },

  /*
   * 联系人昵称
   */
  contactNickname: function(e){
    this.setData({
      contactNickname: e.detail.value,
    })
  },

  /*
   * 联系人手机
   */
  contactPhone: function (e) {
    this.setData({
      contactPhone: e.detail.value,
    })
  },

  /*
   * 扫描二维码获取位置信息
   */

  scanCode: function() {
    wx.scanCode({
      success: (res) => {
        console.log(res)
      }
    })
  },
  /*
   * 备注输入信息
   */
  remarkInput: function(e) {
    this.setData({
      remark: e.detail.value
    })
  },

  /*
   * 去发票页面
   */

  go_invoice: function() {
    wx.navigateTo({
      url: '/pages/order/invoice/invoice'
    })
  },

  /**
   * 创建订单
   */
  _orderSubmit: function() {
    //订单列表
    var ajaxData = {};
    //商品列表
    var goodsorder = {};

    var that = this;

    //订单为堂食订单
    if (this.data.methodNum == 0) {
      //绑定的位置为空
      if (this.data.location == ''){
        util.showError('请输入桌号');
        return false;
      }

      //设置用户选择的位置
      goodsorder.deskNo = that.data.location;
    }

    //订单为预定订单
    if (this.data.methodNum == 1){
      //就餐人数未填写
      if (this.data.mealNum == ''){
        util.showError('请输入用餐人数');
        return false;
      }

      //到店时间未选择
      if (this.data.timeToStore == '') {
        util.showError('请选择到店时间');
        return false;
      }

      //联系人昵称未填写
      if (this.data.contactNickname == '') {
        util.showError('请输入联系人昵称');
        return false;
      }

      //联系人昵称未填写
      if (this.data.contactPhone == '') {
        util.showError('请输入手机号');
        return false;
      }

      //设置预定的信息
      goodsorder.deskNo = 0;
      goodsorder.eatNum = that.data.mealNum;
      goodsorder.eatTime = util.generateTimeTamp(that.data.timeToStore);
      goodsorder.eatName = that.data.contactNickname;
      goodsorder.eatPhone = that.data.contactPhone;
    }
    var foodid = this.data.foodid;
    ajaxData.mode = 5;
    goodsorder.type = '0'; //订单类型0.美食 order生成方式
    goodsorder.payType = '5'; //支付类型5小程序
    var goodlist = [];
    var goodslist = this.data.goodlist;
    for (var i in goodslist) {
      var temp = {};
      console.log(goodslist[i])
      temp['shop_id'] = that.data.shopId;
      temp['goods_id'] = goodslist[i]['id'];
      temp['goods_name'] = goodslist[i]['name'];
      temp['spec_id'] = goodslist[i]['attr_id'];
      temp['spec_name'] = goodslist[i]['attr'];
      temp['goods_price'] = goodslist[i]['price'];
      temp['goods_num'] = goodslist[i]['num'];
      goodlist.push(temp);
    }
    goodsorder.goodlist = goodlist;
    goodsorder.shopId = that.data.shopId;
    goodsorder.userid = wx.getStorageSync('user')['id'];
    //备注
    goodsorder.remark = that.data.remark;
    //发票
    goodsorder.orderInvoice = that.data.invoiceData;
    ajaxData.goodsorder = JSON.stringify(goodsorder);
    network.requestInLogin(contant.data_url.submitOrder, ajaxData, res => {
      console.info(res)
      that.setData({
        orderNo: res.result.orderNo,
        pay: res.result.pay
      })

      //在跳转页面之前关闭websocket
      wx.sendSocketMessage({
        data: '{ "command": 3 }',
        success: function(res) {
          //把未点餐完成的用户设置为空
          wx.setStorageSync('UnFinishedNum', 0);
          //把连接状态置未false
          wx.setStorageSync('isSocket', false);
          //生成订单号成功跳转页面
          wx.navigateTo({
            url: '/pages/order/order-pay/order-pay?order_no=' + that.data.orderNo,
          })
        },
        fail: function(res) {}
      })
    }, res => {
      console.log(res)
    }, "加载中")
  },

  shopCartFn: function(msg) {
    console.log(msg)
    this._loadCartData(msg.response);
  },
  _loadCartData: function(data) {
    console.log(data)
    var that = this;
    var total = 0,
      users = [],
      goodsCount = 0,
      userid, goodlist = [];
    for (var i in data) {
      var cartgoods = data[i].cartgoods;
      var foodUser = data[i].foodUser
      users.push(foodUser);
      // if (foodUser['type'] == 0) {
      //   userid = foodUser['id'];
      // }
      if (cartgoods.length > 0) {
        for (var j in cartgoods) {
          goodlist.push(cartgoods[j]);
          goodsCount += cartgoods[j]['num'];
          total += cartgoods[j]['num'] * cartgoods[j]['price']
        }
      }

    }
    that.setData({
      total: total,
      users: users,
      goodsCount: goodsCount,
      // userid: userid,
      goodlist: goodlist

    })
    console.log(that.data)
  },
})