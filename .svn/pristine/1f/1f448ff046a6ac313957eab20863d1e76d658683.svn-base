// pages/shop/diandan/diandan.js
const app = getApp()
var util = require("../../../utils/util.js")
var WxNotificationCenter = require("../../../utils/WxNotificationCenter.js");
var wxSocket = require("../../../utils/wxSocket.js")
var socketOpen = false, socketMsgQueue = [];
Component({
  /**
   * 组件的属性列表
   */
  properties: {
    shopid: {
      type: String,
      value: ''
    },
    foodid:{
      type: String,
      value: ''
    }
  },

  /**
   * 组件的初始数据
   */
  data: {
    users: [],
    userNum: 1, //点餐人数
  },

  /**
   * 组件的方法列表
   */
  methods: {
    // 关闭点单
    _diandan: function () {
      this.triggerEvent('diandan');
      wxSocket.socketClose()
    },
    // 创建socket
    _socket: function () {
      var that = this;
      //进行判断用户是否是通过分享进入的
      if(this.data.foodid == ''){
        this.setData({
          foodid: that.data.shopid + ':' + wx.getStorageSync('user').id + ':1',
        })
      }
      var user = {
        foodid: this.data.foodid,
        userid: wx.getStorageSync('user').id,
        pic: app.globalData.imageUrl + wx.getStorageSync('user').headpic || wx.getStorageSync('user').headpic_wx,
        name: wx.getStorageSync('user').pickName
      }
      //建立wxSocket链接
      wxSocket.socketConnect(user, that, that.socketMessage)
    },
    _inviate: function () {
      this.triggerEvent('inviate')
    },
    _diancai: function () {
      wx.navigateTo({
        url: '/pages/shop/shop-diandan/shop-diandan?shopid=' + this.data.shopid + "&userNum=" + this.data.userNum,
      })
    },

    // 接受消息处理函数
    socketMessage: function (event, data) {
      console.log(data)
      var that = event;
      var users = that.data.users;
      var result = JSON.parse(data.data, true);
      var response = result.response;//数据返回
      if (result.command == "0") {
        console.log('command')
        WxNotificationCenter.postNotificationName("shopCart", { response: result.response });
      } else if (result.command == "3") {
        //爱军opba的代码
        // for (var i in response) {
        //   var flg = false;
        //   for (var i in users) {
        //     if (users[i]['foodUser']['id'] == response[i].foodUser.id) {
        //       flg = true;
        //       break;
        //     }
        //   }
        //   if (!flg) {
        //     users.push(response[i])
        //   }
        // }

        //得到发起者的userid
        const sourceId = that.data.foodid.substring(6, 10);
        //发起者
        let source;
        //遍历返回的对象
        for(let i in response){
          //得到每个参与者的userid
          let userId = response[i].foodUser.id;
          //判断用户是否为发起者
          if (userId == sourceId){
            source = response[i];
            response.splice(i, 1); // 如果数据组存在该元素，则把该元素删除
            break;
          }
        }

        //把发起者放在数组的第一位
        response.unshift(source);
        users = response;


      } else if (result.command == 4) {
        console.log(response)
        var flg = false;
        for (var i in users) {
          if (users[i]['foodUser']['id'] == response.foodUser.id) {
            flg = true;
            break;
          }
        }
        if (!flg) {
          users.push(response)
        }
      }
      that.setData({
        users: users,
        userNum: users.length,
      })
    }

  },
  ready: function () {
    this._socket();
  }

})
